####################################################################################
#
# Author:           David Koenig
# Date:             2022-03-18
# Description:      This file for configuring the SSH dameon. Do no modify manually, 
#                   it will be maintained by ansible.
# Documentation:    ./../cfg-ssh.md
#
# Changelog: 
#   2022-03-18 - David Koenig - Initial creation
#   2022-03-22 - David Koenig - Added CIS Benchmark recommendations
#   2023-04-16 - David Koenig - Removed depreciated RhostsRSAAuthentication
#####################################################################################

##########################################
# General settings
##########################################
# Just allow SSH protocol v2
Protocol 2

# The network card where ssh is listening in (default 0.0.0.0). Just useful 
#   to use if you have dedicated administration network an a dedicated 
#   network adapter.
ListenAddress 0.0.0.0

# The port, where ssh is listening on (Default 22)
Port {{ ssh_port | default('22') }}

# Disallow login by root. Default is no.
PermitRootLogin no

# The group which defines which user can be accessed by ssh
AllowGroups {{ ssh_group }}

# The longer the Grace period is the more open unauthenticated connections can exist. 
LoginGraceTime 60

# Specifies whether sshd(8) should check file modes and ownership of the user's
#   files and home directory before accepting login. This is normally desirable 
#   because novices sometimes accidentally leave their directory or files world-
#   writable. The default is yes. 
StrictModes yes

##########################################
# Encryption settings
##########################################

# Symmetric algorithms for encrypting the bulk of transferred data. The use of
#   this configuration is recommendend by BSI until 2028+. 
Ciphers aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr

# The public key algorithms accepted for an SSH server to authenticate itself
#   to an SSH client. The use of this configuration is recommendend by BSI 
#   until 2028+.
HostKeyAlgorithms ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256

# The file location for hostkeys
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

# The key exchange methods that are used to generate per-connection keys.
#   The use of this configuration is recommendend by BSI until 2028+. 
KexAlgorithms  diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521

# Specifies the available MAC (message authentication code) algorithms. The MAC
#   algorithm is used for data integrity protection.
MACs hmac-sha2-256,hmac-sha2-512

# Will force a rekey after 1Gbyte of data has been sent using the current
#   key of after 1h has passed since the last key was generated.
RekeyLimit 1G 1H

##########################################
# Connection properties
##########################################

# The default is yes (to send TCP keepalive messages), and the server will 
#   notice if the network goes down or the client host crashes. This avoids 
#   infinitely hanging sessions. TCPKeepAlive is spoofable.
TCPKeepAlive no

# Sets the number of client alive messages which may be sent without sshd 
#   receiving any messages back from the client. If this threshold is reached 
#   while client alive messages are being sent, sshd will disconnect the client, 
#   terminating the session. It is important to note that the use of client 
#   alive messages is very different from TCPKeepAlive. The client alive 
#   messages are sent through the encrypted channel and therefore will not be 
#   spoofable. The TCP keepalive option enabled by TCPKeepAlive is spoofable.
ClientAliveCountMax 3

# Sets a timeout interval in seconds after which if no data has been received 
#   from the client, sshd will send a message through the encrypted channel 
#   to request a response from the client. The default is 0, indicating that 
#   these messages will not be sent to the client.
ClientAliveInterval 15

# To protect a system from denial of service due to a large number of pending 
#   authentication connection attempts, use the rate limiting function of 
#   MaxStartups to protect availability of sshd logins and prevent 
#   overwhelming the daemon. Example: XX:YY:ZZ
#   XX: Number of unauthenticated connections before we start dropping
#   YY: Percentage chance of dropping once we reach 10 (increases linearly 
#       for more than 10)
#   ZZ: Maximum number of connections at which we start dropping everything
MaxStartups 10:30:60

# To protect a system from denial of service due to a large number of
#   concurrent sessions, use the rate limiting function of MaxSessions to 
#   protect availability of sshd logins and prevent overwhelming the daemon.
MaxSessions {{ssh_max_sessions}}

##########################################
# Authentication
##########################################

# Enable authentication by public key
PubkeyAuthentication yes

# Specifies whether to ignore per-user .rhosts and .shosts files during 
#   HostbasedAuthentication. The default is yes. 
IgnoreRhosts yes

# Specifies whether rhosts or /etc/hosts.equiv authentication together with
#   successful public key client host authentication is allowed (host-based 
#   authentication). The default is no.
HostbasedAuthentication no

# Specifies whether sshd should ignore the user's ~/.ssh/known_hosts during 
#   HostbasedAuthentication and use only the system-wide known hosts file 
#   /etc/ssh/known_hosts. The default is no.
IgnoreUserKnownHosts yes

# Specifies whether password authentication is allowed. The default is yes.
PasswordAuthentication no

# When password authentication is allowed, it specifies whether the server
#   allows login to accounts with empty password strings. The default is no.
PermitEmptyPasswords no

# Specifies whether to allow keyboard-interactive authentication. All 
#   authentication styles from login.conf(5) are supported. The default is 
#   yes.
#   ChallengeResponseAuthentication is a deprecated alias for this.
KbdInteractiveAuthentication no

# Specifies the maximum number of authentication attempts permitted per 
#   connection. Once the number of failures reaches half this value, additional
#   failures are logged. The default is 6.
MaxAuthTries 4

# Enables the Pluggable Authentication Module interface.
#   If set to ``yes'' this will enable PAM authentication using 
#   ChallengeResponseAuthentication and PasswordAuthentication in addition 
#   to PAM account and session module processing for all authentication types.
#   Both of these authentication types are disabled by hardening, so UsePAM 
#   should remain off by default.
UsePAM no

# Permitting users the ability to set environment variables through the SSH 
#   daemon could potentially allow users to bypass security controls (e.g. 
#   setting an execution path that has ssh executing trojan'd programs)
PermitUserEnvironment no

##########################################
# Features
##########################################
# Specifies whether X11 forwarding is permitted. The default is no.
#   Active X11Forwarding is a security finding, 
#   and not recommended.
X11Forwarding no

# Specifies whether sshd(8) should print /etc/motd when a user logs in 
#   interactively. The default is yes.
PrintMotd yes

# Specifies whether sshd(8) should print the date and time of the last user
#   login when a user logs in interactively. The default is yes.
PrintLastLog yes

# Specifies what environment variables sent by the client will be copied into 
#   the session's environment.  Be warned that some environment variables could
#   be used to bypass restricted user environments. For this reason, care 
#   should be taken in the use of this directive. The default is not to accept 
#   any environment variables.
# LANG and the LC_* variables are used to to specify the desired locale.
AcceptEnv LANG LC_*

# Configures an external subsystem (e.g. file transfer daemon). Arguments 
#   should be a subsystem name and a command (with optional arguments) to 
#   execute upon subsystem request. sftp is needed by ansible in some cases.
#   By default no subsystems are defined.
Subsystem	sftp	/usr/lib/openssh/sftp-server

# Specifies whether ssh-agent forwarding is permitted. The default is yes.
# This doesn't prevent users to install their own forwarders.
AllowAgentForwarding no

# Specifies whether TCP forwarding is permitted. The available options are yes 
#   (the default) or all to allow TCP forwarding, no to prevent all TCP 
#   forwarding, local to allow local (from the perspective of ssh(1)) forwarding 
#   only or remote to allow remote forwarding only. 
AllowTcpForwarding {{ ssh_allow_tcp_forward }}

##########################################
# Logging
##########################################
# This will log all authentication attempts
SyslogFacility AUTH
# The amount of data which is logged. INFO will give you enough details normally. 
LogLevel INFO

##########################################
# Not needed to implement
##########################################

# https://www.openssh.com/txt/release-7.5
# This release deprecates the sshd_config UsePrivilegeSeparation
#   option, thereby making privilege separation mandatory. Privilege
#   separation has been on by default for almost 15 years and
#   sandboxing has been on by default for almost the last five.
# UsePrivilegeSeparation yes
