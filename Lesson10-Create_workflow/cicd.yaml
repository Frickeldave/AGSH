name: cicd
on: [push]

env:
  GITHUB_WORKFLOW_DESCRIPTION: A workflow to setup pamela, the initial system of the HomeNet environment

jobs:
  cicd:
    runs-on: self-hosted
    steps:

      - name: Create random value for checkout directory
        run: |
          _GITHUB_WORKFLOW_WORKDIR=./checkout/$(echo $RANDOM | md5sum | head -c 5; echo;); \
          echo GITHUB_WORKFLOW_WORKDIR=$_GITHUB_WORKFLOW_WORKDIR >> $GITHUB_ENV

      - name: Create checkout directory
        run: mkdir -p ${{ env.GITHUB_WORKFLOW_WORKDIR }}

      - name: Checkout base repository
        uses: actions/checkout@v4
        with:
          repository: Frickeldave/HomeNet
          path: ${{ env.GITHUB_WORKFLOW_WORKDIR }}/HomeNet

      ################################################################################################
      ## Update the system and install ansible
      ################################################################################################
      - name: Update system
        run: sudo apt update -y

      - name: Upgrade system
        run: sudo apt upgrade -y

      - name: Install prerequisites
        run: sudo apt install -y curl sudo git python3 python3-pip python3-apt

      - name: Ansible core
        run: sudo python3 -m pip install ansible-core==2.15.3

      - name: Ansible lint
        run: sudo python3 -m pip install ansible-lint==6.20.3

      ################################################################################################
      ## Update ansible files
      ################################################################################################
      - name: Create ansible directory
        run: sudo mkdir -p /home/github/ansible

      - name: Create ansible logs directory
        run: sudo mkdir -p /home/github/ansible/logs

      - name: Copy ansible configuration file
        run: sudo cp ${{ env.GITHUB_WORKFLOW_WORKDIR }}/HomeNet/ansible/ansible.cfg /home/github/ansible/ansible.cfg

      - name: Copy ansible hosts directory
        run: sudo rsync -va ${{ env.GITHUB_WORKFLOW_WORKDIR }}/HomeNet/ansible/hosts /home/github/ansible

      - name: Copy ansible playbooks directory
        run: sudo rsync -va ${{ env.GITHUB_WORKFLOW_WORKDIR }}/HomeNet/ansible/playbooks /home/github/ansible

      - name: Copy ansible library directory
        run: sudo rsync -va ${{ env.GITHUB_WORKFLOW_WORKDIR }}/HomeNet/ansible/library /home/github/ansible

      - name: Create the logfile directory
        run: |
          if [ ! -d /home/github/logs ]; then mkdir /home/github/logs; fi

      - name: Write ansible vault secret to disk
        run: sudo bash -c "echo ${{ secrets.HOMENET_ANSIBLE_VAULT }} > /home/github/ansible/av.secret"

      - name: Change ownership of vault secret file
        run: sudo chown github:github "/home/github/ansible/av.secret"

      - name: Secure ansible vault secret file
        run: sudo chmod 600 "/home/github/ansible/av.secret"

      - name: Write ansible ssh key to disk
        run: sudo bash -c "echo \"${{ secrets.HOMENET_ANSIBLE_PRVKEY }}\" > /home/github/.ssh/ansible_ssh.key"

      - name: Change ownership of ansible private key file
        run: sudo chown github:github "/home/github/.ssh/ansible_ssh.key"

      - name: Secure ansible private key file
        run: sudo chmod 600 "/home/github/.ssh/ansible_ssh.key"



      # ################################################################################################
      # ## Create backup user
      # ################################################################################################
      # - name: Create user for file storage data
      #   run: |
      #     if ( ! getent passwd filestorage > /dev/null ); then sudo adduser filestorage; fi

      # - name: Create .ssh dir for file storage user
      #   run: |
      #     if [ ! -d /home/filestorage/.ssh ]; then sudo mkdir -p /home/filestorage/.ssh; fi

      # - name: Create authorized_keys file
      #   run: |
      #     sudo bash -c 'echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/wJ+ijbRzNCTvMPLojhZ0exLamtXW9ttJseOlOgTeqyCvEqi7FE6p+SIk6TMusltB/dmhfPtSM0TK0UEFooXrprBswCGurya2DkDa7SNOHZMQnI4rq7S0vNn785Ii8a6L7SgTbGUFyOeS2JDSxToylXrV759wHZs7C1jI6YLtgTKniN/+5FtTQXCymKZHiNQMloOnNSpdF9+3srotJFNlwxwaAd80EtpPRxb1MJ18NVg0u6mAmm8BWKFKeGij/FkAlJPS316ul5uADytGbHPgtR+lJU5F/7YAHHNLE+Ms80lHKvVtZSb66c5g5Xhzg9YCVxduseRtuuUnPODNi5nT+QZFO94qMOxfOgwfotcFOPvuZYLqQQxRhXTEhrokcjHhg7BfLXHXNij9HgFns+KEY7XmlCeECxd72wYr9iQ87mG+syJSeuXYyJsWIr1QwRbvH52EtUZgfcsdoLnmedMxR0yBuMAkBlAxLRpu+QNZ1cFYvStawa102//BeV5OeP2RgOXIxPFQQoGFTgBnKWa7uu2WQYuhkMITW+WZ2xosXhwSPHuSSobqkaTL9bJFotiDXtQjZOA8w5oGakTa/JVWldwOGbL2nHFh80Wa/UgNT7PU+ftYEzbp+MeSf9OEqo5Ul/fkI6anTuillXCWVi8oK4goX/oAKalqhfs2npBxdQ== filestorage" > "/home/filestorage/.ssh/authorized_keys"'

      # - name: Change ownership of filestorage ssh directory
      #   run: sudo chown -R filestorage:filestorage "/home/filestorage/.ssh"

      # - name: Secure ssh directory
      #   run: sudo chmod 700 "/home/filestorage/.ssh"

      # - name: Secure authorized_keys file
      #   run: sudo chmod 600 "/home/filestorage/.ssh/authorized_keys"

